-- old, check https://github.com/biggaboy212/KarpiWare/blob/main/Open%20Sourced/KarpiWareV4%20Loader.lua
 
  print("KARPIWARE -- THE BEST TROLLING SCRIPT FOR DAHOOD")
print("Made by biggaboy212!")
   -- VARIABLES
          local general = getgenv().Settings
          local s = general.A
          local pa = general.B
          local plr1 = game.Players.LocalPlayer
          local character = plr1.Character
          local humanoid = character.Humanoid
          local CoreGui = game:GetService("StarterGui")
          local savex = nil
          local savey = nil
          local savez = nil
          local target = nil
         
        -- FUNCTIONS
        local function notif()
     print("exc kw scrpt func")
        end
        
          local function custnotif(type, title, desc)
      print("custom notif request, parameters: TYPE - "..type.." | TITLE - "..title.." | DESC - "..desc)
        end

-- was gonna remake this but eh idgaf anymore
        local function savelocation1()
savex = (character.UpperTorso.Position.X)
savey = (character.UpperTorso.Position.Y)
savez = (character.UpperTorso.Position.Z)
        end
        
        
                


     -- MAIN SCRIPT *DO NOT MESS WITH THIS* (i was gonna remaster this since i used a seperate function for each command but got too lazy)

                plr1.Chatted:Connect(
                    function(Chat)
                        if Chat:match(s.prefix..s.command) then
                           notif()
                           local split = string.split(Chat, s.command)
                           local str = string.gsub(split[2], " ", "")
                              plr1.Backpack[str].Parent = character
                       
                        end
                    end
                )
                
                
                
                
                  plr1.Chatted:Connect(
                    function(Chat)
                        if Chat:match(s.prefix..s.command2) then
                           notif()
                         humanoid:UnequipTools()
                        end
                     end
                )
                
                
                
                
              plr1.Chatted:Connect(
                    function(Chat)
                        if Chat:match(s.prefix..s.command3) then
                           notif()
                            local PPname2 = "[Double-Barrel SG]"

local PPlocation2 = game.Players.LocalPlayer.Character:WaitForChild(PPname2)
PPlocation2.GripPos = Vector3.new(1.3,1,-0.3)
                        end
                     end
                )
                
                
                
                
                 plr1.Chatted:Connect(
                    function(Chat)
                        if Chat:match(s.prefix..s.command4) then
                           notif()
                             local PPname2 = "[Double-Barrel SG]"

local PPlocation2 = game.Players.LocalPlayer.Character:WaitForChild(PPname2)
PPlocation2.GripPos = Vector3.new(0,0,0)
                        end
                     end
                )
                
                
                
                
                

                plr1.Chatted:Connect(
                    function(Chat)
                        if Chat == s.prefix..s.command5 then
                            notif()
                            local humanoid = game.Players.LocalPlayer.Character.Humanoid
                            local tool = game.Players.LocalPlayer.Backpack["[Money Gun]"]

                            humanoid:EquipTool(tool)
                            tool:Activate()
                            humanoid:UnequipTools(tool)
                        end
                    end
                )
            
            
            
                      
                plr1.Chatted:Connect(
                    function(Chat)
                        if Chat == s.prefix..s.command6 then
                       notif()
                       local mt = getrawmetatable(game)
local backup
backup = hookfunction(mt.__newindex, newcclosure(function(self, key, value)
if key == "WalkSpeed" and value < 16 then
value = 16
end
return backup(self, key, value)
end))
      local mt = getrawmetatable(game)
local backup
backup = hookfunction(mt.__newindex, newcclosure(function(self, key, value)
if key == "JumpPower" and value < 50 then
value = 50
end
return backup(self, key, value)
end))
                        end
                    end
                )
            
            
          
                plr1.Chatted:Connect(
                    function(Chat)
                        if Chat == s.prefix..s.command7 then
                        notif()

savelocation1()
character.HumanoidRootPart.CFrame = CFrame.new(-883, 22, -130)
wait(3)
character:MoveTo(Vector3.new(savex, savey, savez))
                       end
                    end
                )
            
            
                plr1.Chatted:Connect(
                    function(Chat)
                     local plr1 = game.Players.LocalPlayer
                        if Chat == s.prefix..s.command8 then
                  plr1.Backpack["[Phone]"].Parent = plr1.Character
                  plr1.Backpack["[Bat]"].Parent = plr1.Character
                   local PPname = "[Bat]"
local PPlocation = game.Players.LocalPlayer.Character:WaitForChild(PPname)
PPlocation.GripPos = Vector3.new(-100,-100,-100)
wait(0.01)
plr1.Character["[Phone]"].Parent = plr1.Backpack
plr1.Character["[Bat]"].Parent = plr1.Backpack
wait(0.01)
                  plr1.Backpack["[Phone]"].Parent = plr1.Character
                  plr1.Backpack["[Bat]"].Parent = plr1.Character
                   local PPname = "[Bat]"
local PPlocation = game.Players.LocalPlayer.Character:WaitForChild(PPname)
PPlocation.GripPos = Vector3.new(-100,-100,100)
                        end
                    end
                )
                             
                plr1.Chatted:Connect(
                    function(Chat)
                        if Chat == s.prefix..s.command9 then
                  notif()
                  plr1.Backpack["[FlowersTool]"].Parent = plr1.Character
                  plr1.Backpack["[Bat]"].Parent = plr1.Character
                   local PPname = "[Bat]"
local PPlocation = game.Players.LocalPlayer.Character:WaitForChild(PPname)
PPlocation.GripPos = Vector3.new(-100,-100,-100)
wait(0.01)
plr1.Character["[FlowersTool]"].Parent = plr1.Backpack
plr1.Character["[Bat]"].Parent = plr1.Backpack
wait(0.01)
                  plr1.Backpack["[FlowersTool]"].Parent = plr1.Character
                  plr1.Backpack["[Bat]"].Parent = plr1.Character
                   local PPname = "[Bat]"
local PPlocation = game.Players.LocalPlayer.Character:WaitForChild(PPname)
PPlocation.GripPos = Vector3.new(-100,-100,100)
                        end
                    end
                )
           
                                     
                plr1.Chatted:Connect(
                    function(Chat)
                        if Chat == s.prefix..s.command10 then
                  notif()
                  plr1.Backpack["[Chicken]"].Parent = plr1.Character
                  plr1.Backpack["[Bat]"].Parent = plr1.Character
                   local PPname = "[Bat]"
local PPlocation = game.Players.LocalPlayer.Character:WaitForChild(PPname)
PPlocation.GripPos = Vector3.new(-100,-100,-100)
wait(0.01)
plr1.Character["[Chicken]"].Parent = plr1.Backpack
plr1.Character["[Bat]"].Parent = plr1.Backpack
wait(0.01)
                  plr1.Backpack["[Chicken]"].Parent = plr1.Character
                  plr1.Backpack["[Bat]"].Parent = plr1.Character
                   local PPname = "[Bat]"
local PPlocation = game.Players.LocalPlayer.Character:WaitForChild(PPname)
PPlocation.GripPos = Vector3.new(-100,-100,100)
                        end
                    end
                )
            
            
            
                plr1.Chatted:Connect(
                    function(Chat)
                    
                        if Chat == s.prefix..s.command12 then
notif()
plr = game.Players.LocalPlayer
hum = plr.Character.HumanoidRootPart
mouse = plr:GetMouse()
mouse.KeyDown:connect(function(key)
if key == "q" then
if mouse.Target then
hum.CFrame = CFrame.new(mouse.Hit.x, mouse.Hit.y + 5, mouse.Hit.z)
end
end
end)
                        end
                    end
                )
            
                   
                plr1.Chatted:Connect(
                    function(Chat)
                     
                        if Chat == s.prefix..s.command13 then
                        local plr = game.Players.LocalPlayer
                        notif()
	local mouse = plr:GetMouse()

	localplayer = plr

	if workspace:FindFirstChild("Core") then
		workspace.Core:Destroy()
	end

	local Core = Instance.new("Part")
	Core.Name = "Core"
	Core.Size = Vector3.new(0.05, 0.05, 0.05)

	spawn(function()
		Core.Parent = workspace
		local Weld = Instance.new("Weld", Core)
		Weld.Part0 = Core
		Weld.Part1 = localplayer.Character.LowerTorso
		Weld.C0 = CFrame.new(0, 0, 0)
	end)

	workspace:WaitForChild("Core")

	local torso = workspace.Core
	flying = true
	local speed=10
	local keys={a=false,d=false,w=false,s=false}
	local e1
	local e2
	local function start()
		local pos = Instance.new("BodyPosition",torso)
		local gyro = Instance.new("BodyGyro",torso)
		pos.Name="EPIXPOS"
		pos.maxForce = Vector3.new(math.huge, math.huge, math.huge)
		pos.position = torso.Position
		gyro.maxTorque = Vector3.new(9e9, 9e9, 9e9)
		gyro.cframe = torso.CFrame
		repeat
			wait()
			localplayer.Character.Humanoid.PlatformStand=true
			local new=gyro.cframe - gyro.cframe.p + pos.position
			if not keys.w and not keys.s and not keys.a and not keys.d then
				speed=5
			end
			if keys.w then
				new = new + workspace.CurrentCamera.CoordinateFrame.lookVector * speed
				speed=speed+0
			end
			if keys.s then
				new = new - workspace.CurrentCamera.CoordinateFrame.lookVector * speed
				speed=speed+0
			end
			if keys.d then
				new = new * CFrame.new(speed,0,0)
				speed=speed+0
			end
			if keys.a then
				new = new * CFrame.new(-speed,0,0)
				speed=speed+0
			end
			if speed>10 then
				speed=5
			end
			pos.position=new.p
			if keys.w then
				gyro.cframe = workspace.CurrentCamera.CoordinateFrame*CFrame.Angles(-math.rad(speed*0),0,0)
			elseif keys.s then
				gyro.cframe = workspace.CurrentCamera.CoordinateFrame*CFrame.Angles(math.rad(speed*0),0,0)
			else
				gyro.cframe = workspace.CurrentCamera.CoordinateFrame
			end
		until flying == false
		if gyro then gyro:Destroy() end
		if pos then pos:Destroy() end
		flying=false
		localplayer.Character.Humanoid.PlatformStand=false
		speed=10
	end
	e1=mouse.KeyDown:connect(function(key)
		if not torso or not torso.Parent then flying=false e1:disconnect() e2:disconnect() return end
		if key=="w" then
			keys.w=true
		elseif key=="s" then
			keys.s=true
		elseif key=="a" then
			keys.a=true
		elseif key=="d" then
			keys.d=true
		elseif key=="x" then
			if flying==true then
				flying=false
			else
				flying=true
				start()
			end
		end
	end)
	e2=mouse.KeyUp:connect(function(key)
		if key=="w" then
			keys.w=false
		elseif key=="s" then
			keys.s=false
		elseif key=="a" then
			keys.a=false
		elseif key=="d" then
			keys.d=false
		end
	end)
	start()
                        end
                    end
                )
            
                     
            
            
                                           
                plr1.Chatted:Connect(
                    function(Chat)
                     local plr1 = game.Players.LocalPlayer
                        if Chat == s.prefix..s.command15 then
                        notif()
local PPname = "[Revolver]"
plr = game.Players.LocalPlayer
hum = plr.Character.HumanoidRootPart
mouse = plr:GetMouse()
mouse.KeyUp:connect(function(key)
if key == "z" then
plr.Backpack[PPname].Parent = plr.Character
local PPlocation = game.Players.LocalPlayer.Character:WaitForChild(PPname)
PPlocation.GripPos = Vector3.new(-5,-5,0)
plr.Character.Humanoid:UnequipTools()
plr.Backpack[PPname].Parent = plr.Character
PPlocation:Activate()
plr.Character.Humanoid:UnequipTools()
end
end)
                        end
                    end
                )
            
                                                      
                plr1.Chatted:Connect(
                    function(Chat)
                     local plr1 = game.Players.LocalPlayer
                        if Chat == s.prefix..s.command16 then
                        notif()
game:GetService("TeleportService"):Teleport(game.PlaceId, game:GetService("Players").LocalPlayer)
                        end
                    end
                )

                                plr1.Chatted:Connect(
                    function(Chat)
                     local plr1 = game.Players.LocalPlayer
                        if Chat == s.prefix..s.command18 then
                        notif()
 local PPname2 = "[RPG]"

local PPlocation2 = game.Players.LocalPlayer.Character:WaitForChild(PPname2)
PPlocation2.GripPos = Vector3.new(-0.55,2,-1)
                        end
                    end
                )

                plr1.Chatted:Connect(
                    function(Chat)
                     local plr1 = game.Players.LocalPlayer
                        if Chat == s.prefix..s.command19 then
                            notif()
                        loadstring(game:HttpGet('https://raw.githubusercontent.com/arandomuserlmao/KarpiWare/main/Karpi%20Visuals'))()
                        end
                    end
                )

                plr1.Chatted:Connect(
                    function(Chat)
                     local plr1 = game.Players.LocalPlayer
                        if Chat == s.prefix..s.command17 then
                        notif()
                         loadstring(game:HttpGet('https://raw.githubusercontent.com/dehoisted/Chat-Spy/main/source/main.lua'))()
                        end
                    end
                )
                
                                plr1.Chatted:Connect(
                    function(Chat)
                     local plr1 = game.Players.LocalPlayer
                        if Chat == s.prefix..s.command20 then
                        notif()
                       writefile("Karpiwaregamejobid.KARPI", game.JobId)
                        end
                    end
                )
                
                                plr1.Chatted:Connect(
                    function(Chat)
                     local plr1 = game.Players.LocalPlayer
                        if Chat == s.prefix..s.command21 then
                        notif()
                       game:GetService("TeleportService"):TeleportToPlaceInstance(game.PlaceId, readfile("Karpiwaregamejobid.KARPI"), game.Players.LocalPlayer)
                    end
                end
                )
                
                                                plr1.Chatted:Connect(
                    function(Chat)
                     local plr1 = game.Players.LocalPlayer
                        if Chat == s.prefix..s.command22 then
                      local PPname2 = "[Bat]"
                      notif()
local PPlocation2 = game.Players.LocalPlayer.Character:WaitForChild(PPname2)
print(Vector3.new(PPlocation2.GripPos))
print(Vector3.new(PPlocation2.GripUp))
print(Vector3.new(PPlocation2.GripForward))
print(Vector3.new(PPlocation2.GripRight))
PPlocation2.GripForward = Vector3.new(0,10,0)
PPlocation2.GripPos = Vector3.new(-2,-0.5,0.3)
                    end
                end
                )
                
                
                                                                plr1.Chatted:Connect(
                    function(Chat)
                     local plr1 = game.Players.LocalPlayer
                        if Chat == s.prefix..s.command23 then
                        notif()
                     local PPname2 = "[Phone]"
local PPlocation2 = game.Players.LocalPlayer.Character:WaitForChild(PPname2)
print(Vector3.new(PPlocation2.GripPos))
PPlocation2.GripPos = Vector3.new(-1.85,1.5,1.2)
                    end
                end
                )
                
            plr1.Chatted:Connect(
                    function(Chat)
                     local plr1 = game.Players.LocalPlayer
                        if Chat == s.prefix..s.command24 then
                        notif()
for _,a in pairs(workspace:GetDescendants()) do
    if a:IsA("Seat") then
        a:Remove()
    end
end
                    end
                end
                )
                            plr1.Chatted:Connect(
                    function(Chat)
                     local plr1 = game.Players.LocalPlayer
                        if Chat == s.prefix..s.command25 then
                        notif()
--[[
    Information:

    - This shows you where people are aiming.
    - By default: red = aiming at you = danger, green = aiming away from you = safe
]]

-- // Services
local Players = game:GetService("Players")
local Workspace = game:GetService("Workspace")

-- // Vars
local Terrain = Workspace.Terrain
local LocalPlayer = Players.LocalPlayer
local Beams = {}

local Colours = {
    At = ColorSequence.new(Color3.new(123, 123, 123), Color3.new(123, 123, 123)),
    Away = ColorSequence.new(Color3.new(123, 123, 123), Color3.new(123, 123, 123))
}

-- // Checks if the beam is hitting our character and can't go through walls
local function IsBeamHit(Beam, MousePos)
    -- // Get our character
    local Character = LocalPlayer.Character
    local Attachment = Beam.Attachment1

    -- // Workout the direction
    local Origin = Beam.Attachment0.WorldPosition
    local Direction = MousePos - Origin

    -- // Fire the ray, making sure it hits something (should unless aiming at sky?)
    local raycastParms = RaycastParams.new()
    raycastParms.FilterDescendantsInstances = {Character, Workspace.CurrentCamera}
    local RaycastResult = Workspace:Raycast(Origin, Direction * 2, raycastParms) -- // Multiplied by 2 as ray might fall too short
    if (not RaycastResult) then
        Beam.Color = Colours.Away
        Attachment.WorldPosition = MousePos
        return
    end

    -- // Set the colour based upon if aiming at us or not
    if (Character) then
        Beam.Color = RaycastResult.Instance:IsDescendantOf(Character) and Colours.At or Colours.Away
    end

    -- // Set the position so the beam can't go through walls
    Attachment.WorldPosition = RaycastResult.Position
end

-- // Creates a beam with the default properties
local function CreateBeam(Character)
    -- // Create beam
    local Beam = Instance.new("Beam", Character)

    -- // Set important properties
    Beam.Attachment0 = Character:WaitForChild("Head"):WaitForChild("FaceCenterAttachment")
    Beam.Enabled = Character:FindFirstChild("GunScript", true) ~= nil

    -- // Set visual properties
    Beam.Width0 = 0.1
    Beam.Width1 = 0.1

    -- // Add to beam table so can modify all at once
    table.insert(Beams, Beam)

    -- // Return
    return Beam
end

-- // Apply whenever we get a new character
local function OnCharacter(Character)
    -- // Make sure character exists
    if (not Character) then
        return
    end

    -- // Wait for the MousePos
    local MousePos = Character:WaitForChild("BodyEffects"):WaitForChild("MousePos")

    -- // Create the beam
    local Beam = CreateBeam(Character)

    -- // Attachment for the mouse position
    local Attachment = Instance.new("Attachment", Terrain)
    Beam.Attachment1 = Attachment

    -- // Constantly update when MousePos updates
    IsBeamHit(Beam, MousePos.Value)
    MousePos.Changed:Connect(function()
        IsBeamHit(Beam, MousePos.Value)
    end)

    -- // See whenever they equip a gun
    Character.DescendantAdded:Connect(function(Descendant)
        -- // Check if it is a gun, set enabled
        if (Descendant.Name == "GunScript") then
            Beam.Enabled = true
        end
    end)

    -- // See whenever they unequip a gun
    Character.DescendantRemoving:Connect(function(Descendant)
        -- // Check if it is a gun, set disabled
        if (Descendant.Name == "GunScript") then
            Beam.Enabled = false
        end
    end)
end

-- // Apply on each player
local function OnPlayer(Player)
    OnCharacter(Player.Character)
    Player.CharacterAdded:Connect(OnCharacter)
end

for _, v in ipairs(Players:GetPlayers()) do
    OnPlayer(v)
end

-- // Redo for each new player
Players.PlayerAdded:Connect(OnPlayer)
                    end
                end
                )
                            plr1.Chatted:Connect(
                    function(Chat)
                     local plr1 = game.Players.LocalPlayer
                        if Chat == s.prefix..s.command26 then
                        notif()
game.Workspace.FallenPartsDestroyHeight = -15000
local part = Instance.new("Part")
part.Size = Vector3.new(1000, 10, 1000)
part.Name = "AntiAutoKill"
part.Parent = game.Workspace
part.Anchored = true
local pl = game.Players.LocalPlayer.Character
part.Position = Vector3.new(-897.6600952148438, -650.0717163085938, -709.875732421875)
pl.HumanoidRootPart.CFrame = part.CFrame
                    end
                end
                )
                
                                            plr1.Chatted:Connect(
                    function(Chat)
                     local plr1 = game.Players.LocalPlayer
                        if Chat == s.prefix..s.command27 then
                        notif()





local DeepFakePosition = loadstring(game:HttpGet("https://raw.githubusercontent.com/Nosssa/NossLock/main/GetRealMousePosition"))() 
task.wait()
 
 
--//Services
local China = setmetatable({}, {
   __index = function(Company, Price)
       return game:GetService(Price)
   end})
   
local ChinaWorld = China.Workspace
local Society = China.Players
local ChineseDeporation = China.ReplicatedStorage
local ChinaInputService = China.UserInputService
 
--//Variables
local ChingChong = Society.LocalPlayer
local Cat =  "meow!!" and ChingChong:GetMouse()
 
local ChineseEvent = ChineseDeporation:FindFirstChild("MainEvent") or nil
local Payment = "Hello Da Hoodian!" and nil
 
ChineseBypass = function(ChineseEntity)
   local KimJongUn = ChineseEntity.ChildAdded:Connect(function(credit)
       if credit:IsA("Tool") then
           Payment = credit.Activated:Connect(function()
               if ChineseEvent then
                   ChineseEvent:FireServer("UpdateMousePos", Cat.Hit.Position)
               end
           end)
       end
   end)
end
 
local RandomChinese = function(RandomCredit)
   return type(RandomCredit) == "number" and math.random(-RandomCredit, RandomCredit) or 0
end
 
local ChinaAlive = function(ChinesePlayer)
   return ChinesePlayer and ChinesePlayer.Character and ChinesePlayer.Character:FindFirstChild("Humanoid") and ChinesePlayer.Character:FindFirstChild("Head") or false
end
 
ChingChong.CharacterAdded:Connect(function(NewChingChong)
   ChineseBypass(NewChingChong)
end)
 
if ChinaAlive(ChingChong) then
   ChingChong.Character.Humanoid:UnequipTools()
   ChineseBypass(ChingChong.Character)
end
 
local ChinaHook
ChinaHook = hookmetamethod(game, "__namecall", function(self, ...)
   local ChinaArgs = {...}
   local DeportationMethod = getnamecallmethod()
 
   if not checkcaller() and DeportationMethod == "FireServer" and self.Name == "MainEvent" and ChinaArgs[1] == "UpdateMousePos" and "chungusdian" then
 
       ChinaArgs[2] = "Scarcin made this" and _G.FetchPosition() -- was V3.zero
       
       return self.FireServer(self, unpack(ChinaArgs))
   end
   
   return ChinaHook(self, ...)
end)









                    end
                end
                )
                
                
                
                                                            plr1.Chatted:Connect(
                    function(Chat)
                     local plr1 = game.Players.LocalPlayer
                        if Chat == s.prefix..s.command28 then
                        custnotif("info", "KarpiWare", "PRESS F9 TO SEE COMMANDS")
for i, val in pairs(s) do
    print(val)
end
    print("PREFIX IS "..s.prefix)
                    end
                end
                )
                
                                                                            plr1.Chatted:Connect(
                    function(Chat)
                     local plr1 = game.Players.LocalPlayer
                        if Chat == s.prefix..s.command30 then
                        notif()
                        custnotif("info", "KarpiWare", "DNS Paid lock leak loaded - KarpiWare Config")


getgenv().DNS = {
   General = {
       Notifications = true,
       FOVMode = "PredictionPoint"
   },
   Silent = {
       Main = {
           Enabled = pa.Silent_Aim,
           Mode = "Target",
           Toggle = "C",
           Prediction = pa.Silent_Aim_Prediction,
           Parts = {"Head","LowerTorso","UpperTorso"}
       },
       FOV = {
           ShowFOV = true,
           Radius = pa.Fov_Size,
           Color = Color3.fromRGB(0, 71, 171),
           Filled = false,
           Transparency = 0.8
       }
   },
   Camlock = {
       Main = {
           Enabled = pa.Cam_lock,
           Key = pa.Lock_Key,
           UnlockKey = pa.Unlock_Key,
           SmoothLock = pa.Smooth_Lock,
           Smoothness = pa.Smoothing,
           PredictMovement = pa.Prediction_Enabled,
           Prediction = pa.Cam_Lock_Prediction,
           Shake = false,
           ShakeValue = 7,
           Parts = pa.Cam_Lock_Parts
       },
       FOV = {
           UseFOV = true,
           ShowFOV = true,
           Radius = pa.Fov_Size,
           Color = Color3.fromRGB(0, 71, 171),
           Filled = false,
           Transparency = 0.4
       }
   },
   Tracer = {
       Enabled = false,
       Color = Color3.fromRGB(137, 207, 240),
       Transparency = 0.4,
       Visible = false
   },
   AutoPrediction = { -- the numbers are pings ( this is for silent + Current sets not recommended )
       Enabled = true,
       ping20_30 = 0.12588,
       ping30_40 = 0.11911,
       ping40_50 = 0.12471,
       ping50_60 = 0.12766,
       ping60_70 = 0.12731,
       ping70_80 = 0.12951,
       ping80_90 = 0.13181,
       ping90_100 = 0.138,
       ping100_110 = 0.146,
       ping110_120 = 0.1367,
       ping120_130 = 0.1401,
       ping130_140 = 0.1437,
       ping140_150 = 0.153,
       ping150_160 = 0.1514,
       ping160_170 = 0.1663,
       ping170_180 = 0.1672,
       ping180_190 = 0.1848,
       ping190_200 = 0.1865,
   }
}

local function getnamecall()
   if game.PlaceId == 2788229376 then
       return "UpdateMousePos"
   elseif game.PlaceId == 5602055394 or game.PlaceId == 7951883376 then
       return "MousePos"
   elseif game.PlaceId == 9825515356 then
       return "GetMousePos"
   end
end

local namecalltype = getnamecall()

function MainEventLocate()
   for _,v in pairs(game:GetService("ReplicatedStorage"):GetDescendants()) do
       if v.Name == "MainEvent" then
           return v
       end
   end
end

local mainevent = MainEventLocate()

-- // Shorthand
local uwuDNS = getgenv().DNS
local uwuMain = uwuDNS.General
local uwuCamMain = uwuDNS.Camlock.Main
local uwuCamFOV = uwuDNS.Camlock.FOV
local uwuSilentMain = uwuDNS.Silent.Main
local uwuSilentFOV = uwuDNS.Silent.FOV
local uwuTrace = uwuDNS.Tracer
local uwuAutoPred = uwuDNS.AutoPrediction

-- // Optimization
local vect3 = Vector3.new
local vect2 = Vector2.new
local cnew = CFrame.new

-- // Libraries
local NotificationHolder = loadstring(game:HttpGet("https://raw.githubusercontent.com/BocusLuke/UI/main/STX/Module.Lua"))()
local Notification = loadstring(game:HttpGet("https://raw.githubusercontent.com/BocusLuke/UI/main/STX/Client.Lua"))()

-- // Services
local uis = game:GetService("UserInputService")
local rs = game:GetService("RunService")
local plrs = game:GetService("Players")
local ws = game:GetService("Workspace")

-- // Script Variables
local CToggle = false
local lplr = plrs.LocalPlayer
local CTarget = nil
local CPart = nil
local SToggle = false
local STarget = nil
local SPart = nil

-- // Client Variables
local m = lplr:GetMouse()
local c = ws.CurrentCamera

-- // Notification Function
local function SendNotification(text)
   Notification:Notify(
       {Title = "DNS Rewrite", Description = "pl#0001 - "..text},
       {OutlineColor = Color3.fromRGB(50,76,110),Time = 2, Type = "image"},
       {Image = "http://www.roblox.com/asset/?id=6023426923", ImageColor = Color3.fromRGB(50,76,110)}
   )
end 

-- // Call notification function
if uwuMain.Notifications then
   SendNotification("DNS LOCK ")
end

-- // Camlock FOV
local CamlockFOV = Drawing.new("Circle")
CamlockFOV.Visible = uwuCamFOV.ShowFOV
CamlockFOV.Thickness = 1
CamlockFOV.NumSides = 30
CamlockFOV.Radius = uwuCamFOV.Radius * 3
CamlockFOV.Color = uwuCamFOV.Color
CamlockFOV.Filled = uwuCamFOV.Filled
CamlockFOV.Transparency = uwuCamFOV.Transparency

--Silent FOV
local SilentFOV = Drawing.new("Circle")
SilentFOV.Visible = uwuSilentFOV.ShowFOV
SilentFOV.Thickness = 1
SilentFOV.NumSides = 30
SilentFOV.Radius = uwuSilentFOV.Radius * 3
SilentFOV.Color = uwuSilentFOV.Color
SilentFOV.Filled = uwuSilentFOV.Filled
SilentFOV.Transparency = uwuSilentFOV.Transparency

--Tracer
local Line = Drawing.new("Line")
Line.Color = uwuTrace.Color
Line.Transparency = uwuTrace.Transparency
Line.Thickness = 1
Line.Visible = uwuTrace.Visible

-- // Script Functions
local function uwuFindTawget() -- // Find target
   local d, t = math.huge, nil
   for _,v in pairs (plrs:GetPlayers()) do
       local _,os = c:WorldToViewportPoint(v.Character.PrimaryPart.Position)
       if v ~= lplr and v.Character and v.Character:FindFirstChild("Humanoid") and v.Character.Humanoid.Health ~= 0 and v.Character:FindFirstChild("HumanoidRootPart") and os then
           local pos = c:WorldToViewportPoint(v.Character.PrimaryPart.Position)
           local magnitude = (vect2(pos.X, pos.Y) - vect2(m.X, m.Y + 36)).magnitude
           if magnitude < d then
               t = v
               d = magnitude
           end
       end
   end
   return t
end

local function uwuFindPart() -- // Find aimpart
   local d, p = math.huge, nil
   if CTarget then
       for _,v in pairs(CTarget.Character:GetChildren()) do
           if table.find(uwuCamMain.Parts, v.Name) then
               local pos = c:WorldToViewportPoint(v.Position)
               local Magn = (vect2(m.X, m.Y + 36) - vect2(pos.X, pos.Y)).Magnitude
               if Magn < d then
                   d = Magn
                   p = v
               end
           end
       end
       return p.Name
   end
end

local function uwuFindSilentPart() -- // Find aimpart
   local d, p = math.huge, nil
   if CTarget then
       for _,v in pairs(CTarget.Character:GetChildren()) do
           if table.find(uwuSilentMain.Parts, v.Name) then
               local pos = c:WorldToViewportPoint(v.Position)
               local Magn = (vect2(m.X, m.Y + 36) - vect2(pos.X, pos.Y)).Magnitude
               if Magn < d then
                   d = Magn
                   p = v
               end
           end
       end
       return p.Name
   end
end

local function uwuCheckAnti(targ) -- // Anti-aim detection
   if (targ.Character.HumanoidRootPart.Velocity.Y < -5 and targ.Character.Humanoid:GetState() ~= Enum.HumanoidStateType.Freefall) or targ.Character.HumanoidRootPart.Velocity.Y < -50 then
       return true
   elseif targ and (targ.Character.HumanoidRootPart.Velocity.X > 35 or targ.Character.HumanoidRootPart.Velocity.X < -35) then
       return true
   elseif targ and targ.Character.HumanoidRootPart.Velocity.Y > 60 then
       return true
   elseif targ and (targ.Character.HumanoidRootPart.Velocity.Z > 35 or targ.Character.HumanoidRootPart.Velocity.Z < -35) then
       return true
   else
       return false
   end
end

local function InSilentRadiuwus(target, section, fov) -- // Check if player is in the fov
   if target then
       local pos = nil
       if not uwuCheckAnti(target) then
           pos = c:WorldToViewportPoint(target.Character.PrimaryPart.Position + target.Character.PrimaryPart.Velocity * section.Prediction)
       else
           pos = c:WorldToViewportPoint(target.Character.PrimaryPart.Position + ((target.Character.Humanoid.MoveDirection * target.Character.Humanoid.WalkSpeed) * section.Prediction))
       end
       local mag = (vect2(m.X, m.Y + 36) - vect2(pos.X, pos.Y)).Magnitude
       if mag < fov * 3 then
           return true
       else
           return false
       end
   end
end

local function Silent()
   if STarget then
       if SPart and InSilentRadiuwus(STarget, uwuSilentMain, SilentFOV.Radius) then
           if not uwuCheckAnti(STarget) then
               mainevent:FireServer(namecalltype, STarget.Character[SPart].Position + (STarget.Character[SPart].Velocity * uwuSilentMain.Prediction))
           else
               mainevent:FireServer(namecalltype, STarget.Character[SPart].Position + ((STarget.Character.Humanoid.MoveDirection * STarget.Character.Humanoid.WalkSpeed) * uwuSilentMain.Prediction))
           end
       end
   end
end


local function InRadiuwus(target, section, fov) -- // Check if player is in the fov
   if target then
       if uwuCamFOV.UseFOV then
           local pos = nil
           if not uwuCheckAnti(target) then
               pos = c:WorldToViewportPoint(target.Character.PrimaryPart.Position + target.Character.PrimaryPart.Velocity * section.Prediction)
           else
               pos = c:WorldToViewportPoint(target.Character.PrimaryPart.Position + ((target.Character.Humanoid.MoveDirection * target.Character.Humanoid.WalkSpeed) * section.Prediction))
           end
           local mag = (vect2(m.X, m.Y + 36) - vect2(pos.X, pos.Y)).Magnitude
           if mag < fov * 3 then
               return true
           else
               return false
           end
       else
           return true
       end
   end
end

uis.InputBegan:Connect(function(k,t)
   if not t then
       if k.KeyCode == Enum.KeyCode[uwuCamMain.Key:upper()] then
           CToggle = true
           CTarget = uwuFindTawget()
           if uwuMain.Notifications then
               SendNotification("locked onto "..CTarget.Name)
           end
       elseif k.KeyCode == Enum.KeyCode[uwuCamMain.UnlockKey:upper()] then
           if CToggle then
               CToggle = false
               CTarget = nil
               if uwuMain.Notifications then
                   SendNotification("unlocked")
               end
           end
       elseif k.KeyCode == Enum.KeyCode[uwuSilentMain.Toggle:upper()] and uwuSilentMain == "Regular" then
           if SToggle then
               SToggle = false
               if uwuMain.Notifications then
                   SendNotification("silent disabled")
               end
           else
               SToggle = true
               if uwuMain.Notifications then
                   SendNotification("silent enabled")
               end
           end
       end
   end
end)

rs.RenderStepped:Connect(function()
   if CTarget then
       CPart = uwuFindPart()
       local pos = nil
       local cum = nil
       if CTarget.Character.BodyEffects["K.O"].Value == true or lplr.Character.BodyEffects["K.O"].Value == true then
           CToggle = false
           CTarget = nil
       else
           if uwuCamMain.Shake then
               if uwuCamMain.PredictMovement then
                   if not uwuCheckAnti(CTarget) then
                       cum = CTarget.Character[CPart].Position + CTarget.Character[CPart].Velocity * uwuCamMain.Prediction + (vect3(
                           math.random(-uwuCamMain.ShakeValue, uwuCamMain.ShakeValue),
                           math.random(-uwuCamMain.ShakeValue, uwuCamMain.ShakeValue),
                           math.random(-uwuCamMain.ShakeValue, uwuCamMain.ShakeValue)
                       ) * 0.1)
                   else
                       cum = CTarget.Character[CPart].Position + ((CTarget.Character.Humanoid.MoveDirection * CTarget.Character.Humanoid.WalkSpeed) * uwuCamMain.Prediction + (vect3(
                           math.random(-uwuCamMain.ShakeValue, uwuCamMain.ShakeValue),
                           math.random(-uwuCamMain.ShakeValue, uwuCamMain.ShakeValue),
                           math.random(-uwuCamMain.ShakeValue, uwuCamMain.ShakeValue)
                       ) * 0.1))
                   end
                   pos = c:WorldToViewportPoint(cum)
               else
                   cum = CTarget.Character[CPart].Position + (vect3(
                       math.random(-uwuCamMain.ShakeValue, uwuCamMain.ShakeValue),
                       math.random(-uwuCamMain.ShakeValue, uwuCamMain.ShakeValue),
                       math.random(-uwuCamMain.ShakeValue, uwuCamMain.ShakeValue)
                   ) * 0.1)
                   pos = c:WorldToViewportPoint(cum)
               end
           else
               if uwuCamMain.PredictMovement then
                   if not uwuCheckAnti(CTarget) then
                       cum = CTarget.Character[CPart].Position + CTarget.Character[CPart].Velocity * uwuCamMain.Prediction
                   else
                       cum = CTarget.Character[CPart].Position + ((CTarget.Character.Humanoid.MoveDirection * CTarget.Character.Humanoid.WalkSpeed) * uwuCamMain.Prediction)
                   end
                   pos = c:WorldToViewportPoint(cum)
               else
                   cum = CTarget.Character[CPart].Position
                   pos = c:WorldToViewportPoint(cum)
               end
           end
           if InRadiuwus(CTarget, uwuCamMain, CamlockFOV.Radius) then
               local main = nil
               if uwuCamMain.SmoothLock then
                   main = cnew(c.CFrame.p, cum)
                   c.CFrame = c.CFrame:Lerp(main, uwuCamMain.Smoothness, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut)
               else
                   c.CFrame = cnew(c.CFrame.p, cum)
               end
           end
           if uwuMain.FOVMode == "Mouse" then
               if uwuCamFOV.ShowFOV then
                   CamlockFOV.Position = vect2(m.X, m.Y + 36)
               end
               if uwuSilentFOV.ShowFOV then
                   SilentFOV.Position = vect2(m.X, m.Y + 36)
               end
           elseif uwuMain.FOVMode == "PredictionPoint" then
               if uwuCamFOV.ShowFOV then
                   CamlockFOV.Position = vect2(pos.X, pos.Y)
               end
               if uwuSilentFOV.ShowFOV then
                   SilentFOV.Position = vect2(pos.X, pos.Y)
               end
           end
           if uwuTrace.Enabled then
               Line.Visible = true
               Line.From = vect2(m.X, m.Y + 36)
               Line.To = vect2(pos.X, pos.Y)
           end
       end
   else
       CamlockFOV.Position = vect2(m.X, m.Y + 36)
       SilentFOV.Position = vect2(m.X, m.Y + 36)
       Line.Visible = false
   end
end)

lplr.Character.ChildAdded:Connect(function(tool)
   if tool:IsA("Tool") then
       tool.Activated:connect(function()
           if uwuSilentMain.Mode == "Regular" then
               if SToggle then
                   STarget = uwuFindTawget()
                   if STarget then
                       SPart = uwuFindSilentPart()
                       if SPart then
                           Silent()
                       end
                   end
               end
           elseif uwuSilentMain.Mode == "Target" then
               if CToggle then
                   STarget = CTarget
                   if STarget then
                       SPart = uwuFindSilentPart()
                       if SPart then
                           Silent()
                       end
                   end
               end
           end
       end)
   end
end)

lplr.CharacterAdded:Connect(function(char)
   char.ChildAdded:Connect(function(tool)
       tool.Activated:connect(function()
           if uwuSilentMain.Mode == "Regular" then
               if SToggle then
                   STarget = uwuFindTawget()
                   if STarget then
                       SPart = uwuFindSilentPart()
                       if SPart then
                           Silent()
                       end
                   end
               end
           elseif uwuSilentMain.Mode == "Target" then
               if CToggle then
                   STarget = CTarget
                   if STarget then
                       SPart = uwuFindSilentPart()
                       if SPart then
                           Silent()
                       end
                   end
               end
           end
       end)
   end)
end)

--Auto Prediction
coroutine.resume(coroutine.create(function()
   while true do
       if uwuAutoPred.Enabled then
           local ping = game:GetService("Stats").Network.ServerStatsItem["Data Ping"]:GetValue()
           if ping <= 40 then
               uwuSilentMain.Prediction = uwuAutoPred.ping30_40
           elseif ping <= 50 then
               uwuSilentMain.Prediction = uwuAutoPred.ping40_50
           elseif ping <= 60 then
               uwuSilentMain.Prediction = uwuAutoPred.ping50_60
           elseif ping <= 70 then
               uwuSilentMain.Prediction = uwuAutoPred.ping60_70
           elseif ping <= 80 then
               uwuSilentMain.Prediction = uwuAutoPred.ping70_80
           elseif ping <= 90 then
               uwuSilentMain.Prediction = uwuAutoPred.ping80_90
           elseif ping <= 100 then
               uwuSilentMain.Prediction = uwuAutoPred.ping90_100
           elseif ping <= 110 then
               uwuSilentMain.Prediction = uwuAutoPred.ping100_110
           elseif ping <= 120 then
               uwuSilentMain.Prediction = uwuAutoPred.ping110_120
           elseif ping <= 130 then
               uwuSilentMain.Prediction = uwuAutoPred.ping120_130
           elseif ping <= 140 then
               uwuSilentMain.Prediction = uwuAutoPred.ping130_140
           elseif ping <= 150 then
               uwuSilentMain.Prediction = uwuAutoPred.ping140_150
           elseif ping <= 160 then
               uwuSilentMain.Prediction = uwuAutoPred.ping150_160
           elseif ping <= 170 then
               uwuSilentMain.Prediction = uwuAutoPred.ping160_170
           elseif ping <= 180 then
               uwuSilentMain.Prediction = uwuAutoPred.ping170_180
           elseif ping <= 190 then
               uwuSilentMain.Prediction = uwuAutoPred.ping180_190
           elseif ping <= 200 then
               uwuSilentMain.Prediction = uwuAutoPred.ping190_200
           end
           task.wait(0.7)
       end
   end
end))





                    end
                end
                )
                
            
            
            

                plr1.Chatted:Connect(
                    function(Chat)
                        if Chat:match(s.prefix..s.command29) then
                           notif()
                           local split = string.split(Chat, s.command29)
                           local str = string.gsub(split[2], " ", "")
                           local PartialName = str


		local Players = game.Players:GetPlayers()
		for i = 1, #Players do
			local CurrentPlayer = Players[i]
			if string.lower(CurrentPlayer.Name):sub(1, #PartialName) == string.lower(PartialName) then
                target = CurrentPlayer.Name
                custnotif("info","KarpiWare","Set Target to "..target)
				break
			end
		end



                        end
                    end
                ) 
            
                            plr1.Chatted:Connect(
                    function(Chat)
                        if Chat == s.prefix..s.command31 then
                           notif()
                           local plr2 = game.Players:WaitForChild(target)
                           game.Workspace.CurrentCamera.CameraSubject = plr2.Character
                        end
                    end
                ) 
                
                                            plr1.Chatted:Connect(
                    function(Chat)
                        if Chat == s.prefix..s.command32 then
                           notif()
                          game.Workspace.CurrentCamera.CameraSubject = game.Players.LocalPlayer.Character
                        end
                    end
                ) 
            
            
                                                        plr1.Chatted:Connect(
                    function(Chat)
                        if Chat == s.prefix..s.command33 then
                           notif()
                                 local plr2 = game.Players:WaitForChild(target)
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = plr2.Character.HumanoidRootPart.CFrame * CFrame.new(0,2,0)
                        end
                    end
                ) 
            
            
            
    


if pa.FreezeProtection then
print("FreezeProtect enabled.")
while wait(0.01) do
ply = game.Players.LocalPlayer.Character.UpperTorso
ply2 = game.Players.LocalPlayer.Character.HumanoidRootPart
ply.Anchored = false
ply2.Anchored = false
end
elseif pa.FreezeProtection == false then
print("FreezeProtect not enabled.")
else
print("Unknown error with FreezeProtect function.")
end
